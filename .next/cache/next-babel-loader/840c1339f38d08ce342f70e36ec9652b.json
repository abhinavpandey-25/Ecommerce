{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\ECommerce\\\\mystore\\\\pages\\\\product\\\\[id].js\";\nimport { useRouter } from 'next/router';\nimport baseURL from '../../helper/baseURL';\n\nconst product = props => {\n  const router = useRouter();\n\n  if (router.isFallback) {\n    //agar use static props krte and and fallback true h then agar wo page already build nhi h toh server se fetch\n    //krenge jisme time lgta h toh tb tak ham loading a option dekha sakte h.\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"...Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 16\n    }, this);\n  } // console.log(props);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container center-align\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.value.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.value.mediaURL,\n      style: {\n        \"width\": \"35%\",\n        \"height\": \"400px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"RS \", props.value.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      style: {\n        width: \"50%\",\n        border: \"solid 2px\",\n        textAlign: \"center\"\n      },\n      min: \"1\",\n      placeholder: \"Quantity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"waves-effect waves-light large btn\",\n      children: [\"Add \", /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"material-icons\",\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 63\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.value.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}; // export async function getServerSideProps(context) {\n//    //since by using serverside props it can work fine but when the traffic is more it can decrease its performance\n//    //since the page is static one so we can use getstatic props also for better performance.\n//here in getserever side props context contains the params as obj and inside it id as another object {id:...}\n//    const id= context.params.id;\n//    const data=await fetch(`http://localhost:3000/api/product/${id}`).then(res=>res.json());\n//    console.log(data);\n//    return{\n//        props:{\n//            value:data\n//        }\n//    }\n// }       \n\n\nexport async function getStaticProps(context) {\n  //since by using serverside props it can work fine but when the traffic is more it can decrease its performance\n  //since the page is static one so we can use getstatic props also for better performance.\n  const id = context.params.id;\n  const data = await fetch(`${baseURL}/api/product/${id}`).then(res => res.json()); //console.log(data);\n\n  return {\n    props: {\n      value: data\n    }\n  };\n} //first getstatic paths will run during build to build the sattic page with the givven id only\n//baki agar fallback false h toh other pages k liye pagenot found ayga but agar fall back true h toh jo id exist nhi krti at\n//build time then network request jese hoga on getstatic props\n\nexport async function getStaticPaths() {\n  return {\n    paths: [{\n      params: {\n        id: \"5f977ae61efe90be048d25ae\"\n      }\n    } //lets say we have a largee number of products then what should we doo hame har static path ko build time par hi build \n    //kar sakte h\n    ],\n    fallback: true\n  };\n}\nexport default product;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/ECommerce/mystore/pages/product/[id].js"],"names":["useRouter","baseURL","product","props","router","isFallback","value","name","mediaURL","price","width","border","textAlign","description","getStaticProps","context","id","params","data","fetch","then","res","json","getStaticPaths","paths","fallback"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AACA,MAAMC,OAAO,GAAEC,KAAD,IAAS;AACnB,QAAMC,MAAM,GAACJ,SAAS,EAAtB;;AACA,MAAGI,MAAM,CAACC,UAAV,EAAqB;AACjB;AACA;AACA,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GANkB,CAOnB;;;AACJ,sBACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACI;AAAA,gBAAKF,KAAK,CAACG,KAAN,CAAYC;AAAjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEC;AAAK,MAAA,GAAG,EAAEJ,KAAK,CAACG,KAAN,CAAYE,QAAtB;AAAgC,MAAA,KAAK,EAAE;AAAC,iBAAQ,KAAT;AAAgB,kBAAS;AAAzB;AAAvC;AAAA;AAAA;AAAA;AAAA,YAFD,eAGD;AAAA,6BAAG;AAAA,0BAAOL,KAAK,CAACG,KAAN,CAAYG,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,YAHC,eAIA;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC,KAAP;AAAaC,QAAAA,MAAM,EAAC,WAApB;AAAgCC,QAAAA,SAAS,EAAC;AAA1C,OAA5B;AAAiF,MAAA,GAAG,EAAC,GAArF;AAAyF,MAAA,WAAW,EAAC;AAArG;AAAA;AAAA;AAAA;AAAA,YAJA,eAKD;AAAQ,MAAA,SAAS,EAAC,oCAAlB;AAAA,sCAA2D;AAAG,QAAA,KAAK,EAAC,gBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA3D;AAAA;AAAA;AAAA;AAAA;AAAA,YALC,eAMI;AAAA,gBAAIT,KAAK,CAACG,KAAN,CAAYO;AAAhB;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWC,CAnBD,C,CAoBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC3C;AACA;AACA,QAAMC,EAAE,GAAED,OAAO,CAACE,MAAR,CAAeD,EAAzB;AACA,QAAME,IAAI,GAAC,MAAMC,KAAK,CAAE,GAAElB,OAAQ,gBAAee,EAAG,EAA9B,CAAL,CAAsCI,IAAtC,CAA2CC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAAhD,CAAjB,CAJ2C,CAK3C;;AACA,SAAM;AACFnB,IAAAA,KAAK,EAAC;AACFG,MAAAA,KAAK,EAACY;AADJ;AADJ,GAAN;AAKF,C,CACD;AACA;AACA;;AACA,OAAO,eAAeK,cAAf,GAAgC;AACnC,SAAO;AACLC,IAAAA,KAAK,EAAE,CACL;AAAEP,MAAAA,MAAM,EAAE;AAAED,QAAAA,EAAE,EAAC;AAAL;AAAV,KADK,CAEL;AACA;AAHK,KADF;AAMLS,IAAAA,QAAQ,EAAE;AANL,GAAP;AAQD;AACH,eAAevB,OAAf","sourcesContent":["import {useRouter} from 'next/router'\r\nimport baseURL from '../../helper/baseURL';\r\nconst product=(props)=>{\r\n    const router=useRouter()\r\n    if(router.isFallback){\r\n        //agar use static props krte and and fallback true h then agar wo page already build nhi h toh server se fetch\r\n        //krenge jisme time lgta h toh tb tak ham loading a option dekha sakte h.\r\n        return(<h1>...Loading</h1>)\r\n    }\r\n    // console.log(props);\r\nreturn(\r\n    <div className=\"container center-align\">\r\n        <h2>{props.value.name}</h2>\r\n     <img src={props.value.mediaURL} style={{\"width\":\"35%\", \"height\":\"400px\"}}/>\r\n   <b><p>RS {props.value.price}</p></b>\r\n    <input type=\"number\" style={{width:\"50%\",border:\"solid 2px\",textAlign:\"center\"}} min=\"1\" placeholder=\"Quantity\" />\r\n   <button className=\"waves-effect waves-light large btn\">Add <i class=\"material-icons\">add</i></button>\r\n        <p>{props.value.description}</p>\r\n \r\n    </div>\r\n)\r\n}\r\n// export async function getServerSideProps(context) {\r\n//    //since by using serverside props it can work fine but when the traffic is more it can decrease its performance\r\n//    //since the page is static one so we can use getstatic props also for better performance.\r\n//here in getserever side props context contains the params as obj and inside it id as another object {id:...}\r\n//    const id= context.params.id;\r\n//    const data=await fetch(`http://localhost:3000/api/product/${id}`).then(res=>res.json());\r\n\r\n//    console.log(data);\r\n//    return{\r\n//        props:{\r\n//            value:data\r\n//        }\r\n//    }\r\n// }       \r\nexport async function getStaticProps(context) {\r\n   //since by using serverside props it can work fine but when the traffic is more it can decrease its performance\r\n   //since the page is static one so we can use getstatic props also for better performance.\r\n   const id= context.params.id;\r\n   const data=await fetch(`${baseURL}/api/product/${id}`).then(res=>res.json());\r\n   //console.log(data);\r\n   return{\r\n       props:{\r\n           value:data\r\n       }\r\n   }\r\n}       \r\n//first getstatic paths will run during build to build the sattic page with the givven id only\r\n//baki agar fallback false h toh other pages k liye pagenot found ayga but agar fall back true h toh jo id exist nhi krti at\r\n//build time then network request jese hoga on getstatic props\r\nexport async function getStaticPaths() {\r\n    return {\r\n      paths: [\r\n        { params: { id:\"5f977ae61efe90be048d25ae\"} } \r\n        //lets say we have a largee number of products then what should we doo hame har static path ko build time par hi build \r\n        //kar sakte h\r\n      ],\r\n      fallback: true \r\n    };\r\n  }\r\nexport default product;"]},"metadata":{},"sourceType":"module"}