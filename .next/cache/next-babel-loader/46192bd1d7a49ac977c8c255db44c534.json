{"ast":null,"code":"import initDb from '../../helper/initDb';\nimport User from '../../models/User';\nimport bcrypt from 'bcryptjs';\nimport Cart from '../../models/Cart'; //for connectivity with the database\n\ninitDb();\nexport default (async (req, res) => {\n  console.log(\"aya\");\n  console.log(req.body);\n  const {\n    name,\n    email,\n    password\n  } = req.body;\n\n  try {\n    if (!name || !email || !password) {\n      return res.status(422).json({\n        error: \"Please add all fields\"\n      });\n    }\n\n    const user = await User.findOne({\n      email\n    });\n    console.log(user);\n\n    if (user) {\n      return res.status(422).json({\n        error: \"User already exists\"\n      });\n    }\n\n    const newps = await bcrypt.hash(password, 12);\n    console.log(newps);\n    const nuser = await new User({\n      name: name,\n      email: email,\n      password: newps\n    }).save();\n    await new Cart({\n      user: nuser_id\n    }, {\n      product: []\n    }).save(); //SO JAB hm naya user save kr rhe h toh usse associated ek cart bhi crreate kr rhe h jisme product will remain\n    //empty\n\n    res.status(201).json({\n      message: \"User SignedUp\"\n    });\n  } catch (e) {\n    console.log(e);\n  }\n});","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/ECommerce/mystore/pages/api/signup.js"],"names":["initDb","User","bcrypt","Cart","req","res","console","log","body","name","email","password","status","json","error","user","findOne","newps","hash","nuser","save","nuser_id","product","message","e"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB,C,CACA;;AACAH,MAAM;AACN,gBAAe,OAAMI,GAAN,EAAUC,GAAV,KAAgB;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACJ,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA,KAAN;AAAYC,IAAAA;AAAZ,MAAsBP,GAAG,CAACI,IAAhC;;AACA,MAAG;AACC,QAAG,CAACC,IAAD,IAAO,CAACC,KAAR,IAAe,CAACC,QAAnB,EAA4B;AACxB,aAAON,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,KAAK,EAAC;AAAP,OAArB,CAAP;AACH;;AACD,UAAMC,IAAI,GAAC,MAAMd,IAAI,CAACe,OAAL,CAAa;AAACN,MAAAA;AAAD,KAAb,CAAjB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYQ,IAAZ;;AACA,QAAGA,IAAH,EAAQ;AACN,aAAQV,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,QAAAA,KAAK,EAAC;AAAP,OAArB,CAAR;AACD;;AACD,UAAMG,KAAK,GAAE,MAAMf,MAAM,CAACgB,IAAP,CAAYP,QAAZ,EAAqB,EAArB,CAAnB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AACA,UAAME,KAAK,GAAE,MAAM,IAAIlB,IAAJ,CAAS;AACxBQ,MAAAA,IAAI,EAACA,IADmB;AAExBC,MAAAA,KAAK,EAACA,KAFkB;AAGxBC,MAAAA,QAAQ,EAACM;AAHe,KAAT,EAIZG,IAJY,EAAnB;AAKI,UAAM,IAAIjB,IAAJ,CAAS;AAACY,MAAAA,IAAI,EAACM;AAAN,KAAT,EAAyB;AAACC,MAAAA,OAAO,EAAC;AAAT,KAAzB,EAAuCF,IAAvC,EAAN,CAhBL,CAiBK;AACA;;AACHf,IAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACU,MAAAA,OAAO,EAAC;AAAT,KAArB;AACJ,GApBD,CAqBA,OAAMC,CAAN,EAAQ;AACJlB,IAAAA,OAAO,CAACC,GAAR,CAAYiB,CAAZ;AACH;AACA,CA5BD","sourcesContent":["import initDb from '../../helper/initDb'\r\nimport User from '../../models/User'\r\nimport bcrypt from 'bcryptjs'\r\nimport Cart from '../../models/Cart'\r\n//for connectivity with the database\r\ninitDb();\r\nexport default async(req,res)=>{\r\n    console.log(\"aya\")\r\n    console.log(req.body);\r\nconst {name,email,password}=req.body;\r\ntry{ \r\n    if(!name||!email||!password){\r\n        return res.status(422).json({error:\"Please add all fields\"});\r\n    }\r\n    const user=await User.findOne({email});\r\n    console.log(user);\r\n    if(user){\r\n      return  res.status(422).json({error:\"User already exists\"})\r\n    }\r\n    const newps= await bcrypt.hash(password,12);\r\n    console.log(newps);\r\n    const nuser= await new User({\r\n        name:name,\r\n        email:email,\r\n        password:newps\r\n        }).save();\r\n        await new Cart({user:nuser_id},{product:[]}).save();\r\n        //SO JAB hm naya user save kr rhe h toh usse associated ek cart bhi crreate kr rhe h jisme product will remain\r\n        //empty\r\n     res.status(201).json({message:\"User SignedUp\"});   \r\n}\r\ncatch(e){\r\n    console.log(e);\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}