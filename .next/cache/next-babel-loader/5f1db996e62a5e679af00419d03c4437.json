{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\ECommerce\\\\mystore\\\\pages\\\\index.js\";\n//next Js is SeO friendly kyuki react me hame content nahi pta rhta so Seo friendly nahi h whi next js m server side rendering hoti h\n// so seo friendly kyki insepect element me u can see the loaded content\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport Navbar from '../components/NavBar'; //get static props is used when we use the page that is not user specific like website kholte hi jo items ka page show\n//hoga wo user ki reqauest se pehle hi build krke rakhte h .wo tab hoga jb hm get static props ka use krenge\n//if we use getserver side props toh req server p jygi phir server response krega ie cN BE used in user specific page\n//toh thoda slow hoga ye.\n\nconst Home = props => {\n  const productlist = product.map(val => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      classsName: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        classsName: \"card-image waves-effect waves-block waves-light\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          classsName: \"activator\",\n          src: val.products.mediaURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        classsName: \"card-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          classsName: \"card-title activator grey-text text-darken-4\",\n          children: [val.products.name, /*#__PURE__*/_jsxDEV(\"i\", {\n            classsName: \"material-icons right\",\n            children: \"more_vert\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 92\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            children: \"This is a link\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 12\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        classsName: \"card-reveal\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          classsName: \"card-title grey-text text-darken-4\",\n          children: [\"Card Title\", /*#__PURE__*/_jsxDEV(\"i\", {\n            classsName: \"material-icons right\",\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 73\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Here is some more information about this product that is only revealed once clicked on.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this)]\n    }, val.products._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  });\n  console.log(props); // const [text,setdata]=useState('..load');\n  // useEffect(()=>{\n  //   fetch('http://localhost:3000/api/test').then(res=>res.json()).then(data=>{\n  //     setdata(data.message);\n  //   })\n  // },[])\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"next Js provide the feature of inbuilt JSX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }, this), props.products.map(val => /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: val.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }, this)), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/product\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Go to Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\nexport async function getStaticProps(context) {\n  const data = await fetch('http://localhost:3000/api/products').then(res => res.json());\n  return {\n    props: {\n      products: data\n    }\n  };\n} //is below function ke maddad se server pr message already prerender hho chuka tha ans on  req reso m html diya\n//get static props works at the server side only\n// export async function getStaticProps(context) {\n//   const data=await fetch('http://localhost:3000/api/test').then(res=>res.json());\n//   console.log(data);\n//   return {\n//     props: {message:data.message}, // will be passed to the page component as props\n//   }\n// }\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/ECommerce/mystore/pages/index.js"],"names":["Link","useState","useEffect","Navbar","Home","props","productlist","product","map","val","products","mediaURL","name","_id","console","log","getStaticProps","context","data","fetch","then","res","json"],"mappings":";;;AAAA;AACA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAAQC,QAAR,EAAiBC,SAAjB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;AACA;AACA;AACA;;AACA,MAAMC,IAAI,GAAEC,KAAD,IAAS;AAClB,QAAMC,WAAW,GAACC,OAAO,CAACC,GAAR,CAAYC,GAAG,IAAE;AACjC,wBACE;AAAK,MAAA,UAAU,EAAC,MAAhB;AAAA,8BACA;AAAK,QAAA,UAAU,EAAC,iDAAhB;AAAA,+BACE;AAAK,UAAA,UAAU,EAAC,WAAhB;AAA4B,UAAA,GAAG,EAAEA,GAAG,CAACC,QAAJ,CAAaC;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADA,eAIA;AAAK,QAAA,UAAU,EAAC,cAAhB;AAAA,gCACE;AAAM,UAAA,UAAU,EAAC,8CAAjB;AAAA,qBAAiEF,GAAG,CAACC,QAAJ,CAAaE,IAA9E,eAAmF;AAAG,YAAA,UAAU,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAnF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,iCAAG;AAAG,YAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,eAQA;AAAK,QAAA,UAAU,EAAC,aAAhB;AAAA,gCACE;AAAM,UAAA,UAAU,EAAC,oCAAjB;AAAA,gDAAgE;AAAG,YAAA,UAAU,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cARA;AAAA,OAA4BH,GAAG,CAACC,QAAJ,CAAaG,GAAzC;AAAA;AAAA;AAAA;AAAA,YADF;AAeD,GAhBiB,CAAlB;AAiBAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ,EAlBkB,CAmBlB;AACA;AACA;AAEA;AACA;AACA;;AACF,sBACE;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAEEA,KAAK,CAACK,QAAN,CAAeF,GAAf,CAAmBC,GAAG,iBACxB;AAAA,gBAAKA,GAAG,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,YADE,CAFF,eAcA,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAA,6BAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtB;AAAA;AAAA;AAAA;AAAA,YAdA;AAAA,kBADF;AAkBC,CA5CD;;AA6CA,OAAO,eAAeI,cAAf,CAA8BC,OAA9B,EAAsC;AAC3C,QAAMC,IAAI,GAAE,MAAMC,KAAK,CAAC,oCAAD,CAAL,CAA4CC,IAA5C,CAAiDC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAAtD,CAAlB;AAEA,SAAM;AACJjB,IAAAA,KAAK,EAAC;AACHK,MAAAA,QAAQ,EAACQ;AADN;AADF,GAAN;AAKD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAed,IAAf","sourcesContent":["//next Js is SeO friendly kyuki react me hame content nahi pta rhta so Seo friendly nahi h whi next js m server side rendering hoti h\n// so seo friendly kyki insepect element me u can see the loaded content\nimport Link from 'next/link';\nimport {useState,useEffect} from 'react';\nimport Navbar from '../components/NavBar'\n//get static props is used when we use the page that is not user specific like website kholte hi jo items ka page show\n//hoga wo user ki reqauest se pehle hi build krke rakhte h .wo tab hoga jb hm get static props ka use krenge\n//if we use getserver side props toh req server p jygi phir server response krega ie cN BE used in user specific page\n//toh thoda slow hoga ye.\nconst Home=(props)=>{\n  const productlist=product.map(val=>{\n    return (\n      <div classsName=\"card\" key={val.products._id}>\n      <div classsName=\"card-image waves-effect waves-block waves-light\">\n        <img classsName=\"activator\" src={val.products.mediaURL}/>\n      </div>\n      <div classsName=\"card-content\">\n        <span classsName=\"card-title activator grey-text text-darken-4\">{val.products.name}<i classsName=\"material-icons right\">more_vert</i></span>\n        <p><a href=\"#\">This is a link</a></p>\n      </div>\n      <div classsName=\"card-reveal\">\n        <span classsName=\"card-title grey-text text-darken-4\">Card Title<i classsName=\"material-icons right\">close</i></span>\n        <p>Here is some more information about this product that is only revealed once clicked on.</p>\n      </div>\n    </div>   \n    )\n  })\n  console.log(props)\n  // const [text,setdata]=useState('..load');\n  // useEffect(()=>{\n  //   fetch('http://localhost:3000/api/test').then(res=>res.json()).then(data=>{\n      \n  //     setdata(data.message);\n  //   })\n  // },[])\nreturn (\n  <>\n  <h1>next Js provide the feature of inbuilt JSX</h1>\n  { props.products.map(val=>\n  <h4>{val.name}</h4>\n  )\n  }\n  {/* <h2>{props.message}</h2> */}\n  {/* <style jsx>\n    {\n      `h2{\n      color:red\n      }`\n    }\n  </style> */}\n  <Link href='/product'><a>Go to Products</a></Link>\n  </>\n)\n}\nexport async function getStaticProps(context){\n  const data= await fetch('http://localhost:3000/api/products').then(res=>res.json());\n \n  return{\n    props:{\n       products:data\n    }\n  }\n}\n\n//is below function ke maddad se server pr message already prerender hho chuka tha ans on  req reso m html diya\n//get static props works at the server side only\n// export async function getStaticProps(context) {\n//   const data=await fetch('http://localhost:3000/api/test').then(res=>res.json());\n//   console.log(data);\n//   return {\n//     props: {message:data.message}, // will be passed to the page component as props\n//   }\n// }\nexport default Home;"]},"metadata":{},"sourceType":"module"}