{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\ECommerce\\\\mystore\\\\pages\\\\cart.js\",\n    _this = this;\n\nimport cookie from 'js-cookie';\n\nvar cart = function cart(_ref) {\n  var error = _ref.error;\n\n  if (error) {\n    M.toast({\n      html: error,\n      classes: \"red\"\n    });\n    cookie.remove(\"user\");\n    cookie.remove(\"token\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"this is cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, _this)\n  }, void 0, false);\n};\n\nexport var __N_SSP = true;\nexport default cart;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/ECommerce/mystore/pages/cart.js"],"names":["cookie","cart","error","M","toast","html","classes","remove"],"mappings":";;;;;;AAEA,OAAOA,MAAP,MAAmB,WAAnB;;AACA,IAAMC,IAAI,GAAC,SAALA,IAAK,OAAW;AAAA,MAATC,KAAS,QAATA,KAAS;;AAClB,MAAGA,KAAH,EAAS;AACLC,IAAAA,CAAC,CAACC,KAAF,CAAQ;AAACC,MAAAA,IAAI,EAACH,KAAN;AAAYI,MAAAA,OAAO,EAAC;AAApB,KAAR;AACAN,IAAAA,MAAM,CAACO,MAAP,CAAc,MAAd;AACAP,IAAAA,MAAM,CAACO,MAAP,CAAc,OAAd;AAEH;;AACD,sBACI;AAAA,2BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAF,mBADJ;AAGH,CAVD;;;AAkCA,eAAeN,IAAf","sourcesContent":["import baseURL from '../helper/baseURL';\r\nimport {parseCookies} from 'nookies';\r\nimport cookie from 'js-cookie'\r\nconst cart=({error})=>{\r\n    if(error){\r\n        M.toast({html:error,classes:\"red\"})\r\n        cookie.remove(\"user\");\r\n        cookie.remove(\"token\");\r\n        \r\n    }\r\n    return (\r\n        <><h1>this is cart</h1></>\r\n    )       \r\n}\r\nexport async function getServerSideProps(ctx){\r\n    const{token}=parseCookies(ctx);\r\n    if(!token){\r\n        return {\r\n            props:{products:[]}\r\n        }\r\n    }\r\nconst res=await fetch(`${baseURL}/api/cart`,{\r\nheaders:{\r\n    \"Authorization\":token\r\n}\r\n})\r\nconst products=await res.json();\r\nif(products.error){\r\n    return {\r\n        props:{error:products.error}\r\n    }\r\n}\r\nconsole.log(\"products\",products)\r\nreturn{\r\n    props:{products:products}\r\n}\r\n}\r\nexport default cart;"]},"metadata":{},"sourceType":"module"}