{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\ECommerce\\\\mystore\\\\pages\\\\login.js\";\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport baseURL from '../helper/baseURL';\nimport cookie from 'js-cookie';\nimport { useRouter } from 'next/router';\n\nconst login = () => {\n  const {\n    0: email,\n    1: setemail\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setpassword\n  } = useState(\"\");\n  const router = useRouter(\"\");\n\n  const UserLogin = async e => {\n    e.preventDefault();\n    const res = await fetch(`${baseURL}/api/Login`, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    });\n    const res2 = await res.json();\n    console.log(res2);\n\n    if (res2.error) {\n      M.toast({\n        html: res2.error,\n        classes: \"red\"\n      });\n    } else {\n      //now as u get the token than it could be saved at two places that is local storage if local storage \n      //then token is accesible from client side only  and in the form of cookie and if cookie then can be accessed from\n      //both client and server \n      console.log(res2);\n      cookie.set('token', res2.token);\n      cookie.set('user', res2.user);\n      router.push('/account');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => UserLogin(e),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" container center-align card authcard\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => {\n            setemail(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"password\",\n          value: password,\n          onChange: e => {\n            setpassword(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"waves-effect waves-light btn \",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"material-icons left \",\n            children: \"forward\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 74\n          }, this), \"Login\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              margin: \"8px\"\n            },\n            className: \"waves-effect waves-light btn\",\n            onClick: () => router.push('/signup'),\n            children: \"Does Not Have Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\nexport default login;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/ECommerce/mystore/pages/login.js"],"names":["useState","Link","baseURL","cookie","useRouter","login","email","setemail","password","setpassword","router","UserLogin","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","res2","json","console","log","error","M","toast","html","classes","set","token","user","push","target","value","margin"],"mappings":"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","sourcesContent":["import {useState} from 'react'\r\nimport Link from 'next/link'\r\nimport baseURL from '../helper/baseURL'\r\nimport cookie from 'js-cookie'\r\nimport {useRouter} from 'next/router';\r\nconst login=()=>{\r\n  const [email,setemail]=useState(\"\");\r\n  const[password,setpassword]=useState(\"\");\r\n  const router =useRouter(\"\");\r\n  const UserLogin=async(e)=>{\r\n    e.preventDefault();\r\n    const res=await fetch(`${baseURL}/api/Login`,{\r\n      method:\"POST\",\r\n      headers:{\r\n        'Content-Type':'application/json'\r\n      },\r\n      body:JSON.stringify({\r\n        email:email,\r\n        password:password\r\n      })\r\n    })\r\n    const res2=await res.json();\r\n    console.log(res2);\r\n    if(res2.error){\r\n      M.toast({html: res2.error,classes:\"red\"})\r\n    }\r\n    else{\r\n      //now as u get the token than it could be saved at two places that is local storage if local storage \r\n      //then token is accesible from client side only  and in the form of cookie and if cookie then can be accessed from\r\n      //both client and server \r\n        console.log(res2);\r\n      cookie.set('token',res2.token);\r\n      cookie.set('user',res2.user);\r\n      router.push('/account');\r\n    }\r\n  }\r\n    return( <>\r\n    <form onSubmit={(e)=>UserLogin(e)}>\r\n    <div className=\" container center-align card authcard\">\r\n    <h1>Login</h1>\r\n      <input type=\"text\" placeholder=\"Email\" value={email} onChange={(e)=>{\r\n        setemail(e.target.value);\r\n      }}/><input type=\"text\" placeholder=\"password\" value={password} onChange={(e)=>{\r\n        setpassword(e.target.value);\r\n      }}/>\r\n         <button type=\"submit\" className=\"waves-effect waves-light btn \"><i className=\"material-icons left \">forward</i>Login</button>\r\n         <div>\r\n      <button style={{margin:\"8px\" }} className=\"waves-effect waves-light btn\" onClick={()=>router.push('/signup')}>\r\n        Does Not Have Account\r\n      </button>\r\n      </div>\r\n\r\n    </div>\r\n    </form>\r\n    </>\r\n    )\r\n}\r\nexport default login"]},"metadata":{},"sourceType":"module"}