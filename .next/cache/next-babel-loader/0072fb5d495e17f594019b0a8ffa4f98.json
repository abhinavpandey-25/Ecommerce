{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\ECommerce\\\\mystore\\\\pages\\\\cart.js\";\nimport baseURL from '../helper/baseURL';\nimport { parseCookies } from 'nookies';\nimport cookie from 'js-cookie';\n\nconst cart = ({\n  error\n}) => {\n  if (error) {\n    M.toast({\n      html: error,\n      classes: \"red\"\n    });\n    cookie.remove(\"user\");\n    cookie.remove(\"token\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"this is cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\nexport async function getServerSideProps(ctx) {\n  const {\n    token\n  } = parseCookies(ctx);\n\n  if (!token) {\n    return {\n      props: {\n        products: []\n      }\n    };\n  }\n\n  const res = await fetch(`${baseURL}/api/cart`, {\n    headers: {\n      \"Authorization\": token\n    }\n  });\n  const products = await res.json();\n\n  if (products.error) {\n    return {\n      props: {\n        error: products.error\n      }\n    };\n  }\n\n  console.log(\"products\", products);\n  return {\n    props: {\n      products: products\n    }\n  };\n}\nexport default cart;","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/ECommerce/mystore/pages/cart.js"],"names":["baseURL","parseCookies","cookie","cart","error","M","toast","html","classes","remove","getServerSideProps","ctx","token","props","products","res","fetch","headers","json","console","log"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,mBAApB;AACA,SAAQC,YAAR,QAA2B,SAA3B;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AACA,MAAMC,IAAI,GAAC,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AAClB,MAAGA,KAAH,EAAS;AACLC,IAAAA,CAAC,CAACC,KAAF,CAAQ;AAACC,MAAAA,IAAI,EAACH,KAAN;AAAYI,MAAAA,OAAO,EAAC;AAApB,KAAR;AACAN,IAAAA,MAAM,CAACO,MAAP,CAAc,MAAd;AACAP,IAAAA,MAAM,CAACO,MAAP,CAAc,OAAd;AAEH;;AACD,sBACI;AAAA,2BAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAF,mBADJ;AAGH,CAVD;;AAWA,OAAO,eAAeC,kBAAf,CAAkCC,GAAlC,EAAsC;AACzC,QAAK;AAACC,IAAAA;AAAD,MAAQX,YAAY,CAACU,GAAD,CAAzB;;AACA,MAAG,CAACC,KAAJ,EAAU;AACN,WAAO;AACHC,MAAAA,KAAK,EAAC;AAACC,QAAAA,QAAQ,EAAC;AAAV;AADH,KAAP;AAGH;;AACL,QAAMC,GAAG,GAAC,MAAMC,KAAK,CAAE,GAAEhB,OAAQ,WAAZ,EAAuB;AAC5CiB,IAAAA,OAAO,EAAC;AACJ,uBAAgBL;AADZ;AADoC,GAAvB,CAArB;AAKA,QAAME,QAAQ,GAAC,MAAMC,GAAG,CAACG,IAAJ,EAArB;;AACA,MAAGJ,QAAQ,CAACV,KAAZ,EAAkB;AACd,WAAO;AACHS,MAAAA,KAAK,EAAC;AAACT,QAAAA,KAAK,EAACU,QAAQ,CAACV;AAAhB;AADH,KAAP;AAGH;;AACDe,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBN,QAAvB;AACA,SAAM;AACFD,IAAAA,KAAK,EAAC;AAACC,MAAAA,QAAQ,EAACA;AAAV;AADJ,GAAN;AAGC;AACD,eAAeX,IAAf","sourcesContent":["import baseURL from '../helper/baseURL';\r\nimport {parseCookies} from 'nookies';\r\nimport cookie from 'js-cookie'\r\nconst cart=({error})=>{\r\n    if(error){\r\n        M.toast({html:error,classes:\"red\"})\r\n        cookie.remove(\"user\");\r\n        cookie.remove(\"token\");\r\n        \r\n    }\r\n    return (\r\n        <><h1>this is cart</h1></>\r\n    )       \r\n}\r\nexport async function getServerSideProps(ctx){\r\n    const{token}=parseCookies(ctx);\r\n    if(!token){\r\n        return {\r\n            props:{products:[]}\r\n        }\r\n    }\r\nconst res=await fetch(`${baseURL}/api/cart`,{\r\nheaders:{\r\n    \"Authorization\":token\r\n}\r\n})\r\nconst products=await res.json();\r\nif(products.error){\r\n    return {\r\n        props:{error:products.error}\r\n    }\r\n}\r\nconsole.log(\"products\",products)\r\nreturn{\r\n    props:{products:products}\r\n}\r\n}\r\nexport default cart;"]},"metadata":{},"sourceType":"module"}